name: Python Package using Conda

on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      matrix:
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: 3.11
        # channels: conda-forge,defaults
        # channel-priority: true
    # - name: Install dependencies
    #   run: |
    #     python --version
    #     # conda install -y python=3.11
    #     $CONDA/bin/conda env update --file environment.yml --name base
    #     python --version
    - name: Check Python version
      run: |
        echo 'Python Version:'
        python --version

    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install -r requirements.txt
    - name: Install Conda
      run: |
        PYTHON_VERSION=3.11
        curl -O https://repo.anaconda.com/miniconda/Miniconda3-py${PYTHON_VERSION}_Linux-x86_64.sh
        bash Miniconda3-py${PYTHON_VERSION}_Linux-x86_64.sh -b -p $HOME/miniconda
        export PATH="$HOME/miniconda/bin:$PATH"
        hash -r
        conda config --set always_yes yes --set changeps1 no
        conda update -q conda
        echo "Python version is: $(python --version)"

    - name: Create Conda environment
      run: |
        conda env create --file environment.yml --name base python=3.11

    - name: Activate Conda environment
      run: |
        source activate base
    - name: Check Python version after installation
      run: |
        echo 'Python Version:'
        python --version
    - name: Install Poetry
      run: |
           python --version
           pipx install poetry
           echo "POETRY_CACHE_DIR=$(pip cache dir)" >> $GITHUB_ENV
           python --version

    # - name: Add conda to system path
    #   run: |
    #     python --version
    #     # $CONDA is an environment variable pointing to the root of the miniconda directory
    #     echo $CONDA/bin >> $GITHUB_PATH
    #     python --version


    - name: Lint with flake8
      run: |
        python --version
        # conda install flake8
        # stop the build if there are Python syntax errors or undefined names
        # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
   