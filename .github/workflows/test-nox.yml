name: Setup Python on Windows Server 2022
on:
  push:
    branches:
      - test-769
  workflow_dispatch:
# jobs:
#   test-python:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os: [ubuntu-latest, windows-latest, macos-latest, macos-13, ubuntu-22.04, ubuntu-20.04]
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4

#       - name: Run with setup-python 3.13
#         id: cp313
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.13'
#       - name: Verify 3.13
#         run: python __tests__/verify-python.py 3.13
#       - name: Run python-path sample 3.13
#         run: pipx run --python '${{ steps.cp313.outputs.python-path }}' nox --version
jobs:
    setup-python-multiple-python-versions:
      runs-on: ${{ matrix.os }}
      strategy:
        fail-fast: false
        matrix:
          os:
          [
            ubuntu-20.04,
            ubuntu-22.04,
            ubuntu-latest,
            windows-latest,
            macos-latest,
            macos-13
          ]
      steps:
      - uses: actions/checkout@v4
      - name: Run with setup-python 3.8
        if: matrix.os != 'macos-latest' && matrix.os != 'windows-latest'
        uses: actions/setup-python@v5
        with:
          python-version: 3.8
      - name: Verify 3.8
        run: python __tests__/verify-python.py 3.8
  # setup-python-multiple-python-versions:
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os:
  #         [
  #           ubuntu-20.04,
  #           ubuntu-22.04,
  #           ubuntu-latest,
  #           windows-latest,
  #           macos-latest,
  #           macos-13
  #         ]
  #       python: ['3.8', '3.9', '3.11', '3.12', '3.13']
  #       exclude:
  #         - os: macos-latest
  #           python: '3.9'
  #         - os: windows-latest
  #           python: '3.9'
  #         - os: macos-latest
  #           python: '3.8'
  #         - os: windows-latest
  #           python: '3.8'
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Setup Python and check latest
  #       uses: actions/setup-python@v3
  #       with:
  #         python-version: ${{ matrix.python }}
  #         check-latest: true
  #     - name: Validate version
  #       run: |
  #         $pythonVersion = (python --version)
  #         if ("$pythonVersion" -NotMatch "${{ matrix.python }}"){
  #           Write-Host "The current version is $pythonVersion; expected version is ${{ matrix.python }}"
  #           exit 1
  #         }
  #         $pythonVersion
  #       shell: pwsh
  # 
  
# [tool.poetry]
# name = "sample-python"
# version = "0.1.0"
# description = "test"
# authors = ["Your Name <you@example.com>"]
# readme = "README.md"

# [tool.poetry.dependencies]
# python = "^3.8"


# [build-system]
# requires = ["poetry-core"]
# build-backend = "poetry.core.masonry.api"
